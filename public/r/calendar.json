{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar",
  "type": "registry:ui",
  "title": "Calendar",
  "dependencies": [
    "react-day-picker@8.10.1",
    "date-fns"
  ],
  "registryDependencies": [
    "https://neobrutalism.dev/r/nbutton.json"
  ],
  "files": [
    {
      "path": "src/components/ui/calendar.tsx",
      "content": "\"use client\"\n\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport * as React from \"react\"\n\nimport { buttonVariants } from \"@/components/ui/button\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\n        \"rounded-base! border-2 border-border bg-main p-3 font-heading shadow-shadow\",\n        className,\n      )}\n      classNames={{\n        months: \"flex flex-col sm:flex-row gap-2\",\n        month: \"flex flex-col gap-4\",\n        caption:\n          \"flex justify-center pt-1 relative items-center w-full text-main-foreground\",\n        caption_label: \"text-sm font-heading\",\n        nav: \"gap-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"noShadow\" }),\n          \"size-7 bg-transparent p-0\",\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-main-foreground rounded-base w-9 font-base text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-black/50 [&:has([aria-selected])]:text-white! [&:has([aria-selected].day-range-end)]:rounded-r-base\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-base [&:has(>.day-range-start)]:rounded-l-base [&:has([aria-selected])]:bg-black/50! first:[&:has([aria-selected])]:rounded-l-base last:[&:has([aria-selected])]:rounded-r-base\"\n            : \"[&:has([aria-selected])]:rounded-base [&:has([aria-selected])]:bg-black/50\",\n        ),\n        day: cn(\n          buttonVariants({ variant: \"noShadow\" }),\n          \"size-9 p-0 font-base aria-selected:opacity-100\",\n        ),\n        day_range_start:\n          \"day-range-start aria-selected:bg-black! aria-selected:text-white rounded-base\",\n        day_range_end:\n          \"day-range-end aria-selected:bg-black! aria-selected:text-white rounded-base\",\n        day_selected: \"bg-black! text-white! rounded-base\",\n        day_today: \"bg-white dark:bg-secondaryBlack text-foreground!\",\n        day_outside:\n          \"day-outside text-main-foreground opacity-50 aria-selected:bg-none\",\n        day_disabled: \"text-main-foreground opacity-50 rounded-base\",\n        day_range_middle: \"aria-selected:bg-black/50! aria-selected:text-white\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"size-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"size-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
      "type": "registry:ui"
    }
  ]
}